{
  "version": 3,
  "sources": ["../src/connection.ts"],
  "sourcesContent": ["import mysql from \"mysql2/promise\";\nimport { DBConfig } from \"./types/types\";\n\nlet dbConfig: DBConfig = {} as DBConfig;\n\nexport function setDBConfig(config: DBConfig): void {\n    dbConfig = config;\n}\n\nexport async function useConnection<T>(cb: (connection: mysql.Connection) => Promise<T>): Promise<T> {\n    let connection;\n    try {\n        connection = await mysql.createConnection(dbConfig);\n        console.log(`Connected to database: ${dbConfig.host}`);\n        return await cb(connection);\n    } catch (err) {\n        throw new Error(\"Error with database operation\");\n    } finally {\n        if (connection) {\n            await connection.end();\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkB;AAGlB,IAAI,WAAqB,CAAC;AAEnB,SAAS,YAAY,QAAwB;AAChD,aAAW;AACf;AAEA,eAAsB,cAAiB,IAA8D;AACjG,MAAI;AACJ,MAAI;AACA,iBAAa,MAAM,eAAAA,QAAM,iBAAiB,QAAQ;AAClD,YAAQ,IAAI,0BAA0B,SAAS,IAAI,EAAE;AACrD,WAAO,MAAM,GAAG,UAAU;AAAA,EAC9B,SAAS,KAAK;AACV,UAAM,IAAI,MAAM,+BAA+B;AAAA,EACnD,UAAE;AACE,QAAI,YAAY;AACZ,YAAM,WAAW,IAAI;AAAA,IACzB;AAAA,EACJ;AACJ;",
  "names": ["mysql"]
}
