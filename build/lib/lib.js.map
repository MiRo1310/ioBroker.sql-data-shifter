{
  "version": 3,
  "sources": ["../../src/lib/lib.ts"],
  "sourcesContent": ["import type { SqlIobrokerAdapterRow } from '../types/types';\nimport type { TableItem } from './adapter-config';\n\nexport function calculateAverage(rows: SqlIobrokerAdapterRow[]): number {\n    let sum = 0;\n    rows.forEach(row => {\n        sum += Number(row.val);\n    });\n    return sum / rows.length;\n}\n\nexport function sumResult(rows: SqlIobrokerAdapterRow[]): number {\n    return rows.reduce((acc, row) => {\n        return acc + Number(row.val);\n    }, 0);\n}\n\nexport function differenceResult(rows: SqlIobrokerAdapterRow[]): number {\n    const firstRow = rows[0];\n    const lastRow = rows[rows.length - 1];\n\n    if (!firstRow?.val || !lastRow?.val) {\n        return 0;\n    }\n    return Number(lastRow.val) - Number(firstRow.val);\n}\n\nexport const addParamsToTableItem = (table: TableItem[]): (TableItem & { oldTimestamp?: number })[] => {\n    const tableWithMoreParams: (TableItem & { oldTimestamp?: number })[] = table;\n\n    return tableWithMoreParams.map(item => {\n        return { ...item, oldTimestamp: 0 };\n    });\n};\n\nexport const isDefined = (\n    value?: string | number | boolean | null | object,\n): value is string | number | boolean | object => {\n    return value !== undefined && value !== null;\n};\n\nexport const roundValue = <T>(entry: TableItem, val?: T): T | undefined => {\n    if (typeof val === 'string' || entry.round === 0 || typeof val !== 'number') {\n        return val;\n    }\n    return Number(val.toFixed(entry.round)) as T;\n};\n\nexport const toJSON = (val: object): string => {\n    return JSON.stringify(val, null, 2);\n};\n\nexport const getRetentionTime = (entry: TableItem): number => {\n    if (entry.retentionValue === 0) {\n        return 0;\n    }\n    const now = Date.now();\n    switch (entry.retentionUnit) {\n        case 'hours':\n            return now - entry.retentionValue * 60 * 60 * 1000;\n        case 'days':\n            return now - entry.retentionValue * 24 * 60 * 60 * 1000;\n        case 'weeks':\n            return now - entry.retentionValue * 7 * 24 * 60 * 60 * 1000;\n        case 'months':\n            return now - entry.retentionValue * 30 * 24 * 60 * 60 * 1000; // Approximation\n        case 'years':\n            return now - entry.retentionValue * 365 * 24 * 60 * 60 * 1000; // Approximation\n        default:\n            return now;\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO,SAAS,iBAAiB,MAAuC;AACpE,MAAI,MAAM;AACV,OAAK,QAAQ,SAAO;AAChB,WAAO,OAAO,IAAI,GAAG;AAAA,EACzB,CAAC;AACD,SAAO,MAAM,KAAK;AACtB;AAEO,SAAS,UAAU,MAAuC;AAC7D,SAAO,KAAK,OAAO,CAAC,KAAK,QAAQ;AAC7B,WAAO,MAAM,OAAO,IAAI,GAAG;AAAA,EAC/B,GAAG,CAAC;AACR;AAEO,SAAS,iBAAiB,MAAuC;AACpE,QAAM,WAAW,KAAK,CAAC;AACvB,QAAM,UAAU,KAAK,KAAK,SAAS,CAAC;AAEpC,MAAI,EAAC,qCAAU,QAAO,EAAC,mCAAS,MAAK;AACjC,WAAO;AAAA,EACX;AACA,SAAO,OAAO,QAAQ,GAAG,IAAI,OAAO,SAAS,GAAG;AACpD;AAEO,MAAM,uBAAuB,CAAC,UAAkE;AACnG,QAAM,sBAAiE;AAEvE,SAAO,oBAAoB,IAAI,UAAQ;AACnC,WAAO,EAAE,GAAG,MAAM,cAAc,EAAE;AAAA,EACtC,CAAC;AACL;AAEO,MAAM,YAAY,CACrB,UAC8C;AAC9C,SAAO,UAAU,UAAa,UAAU;AAC5C;AAEO,MAAM,aAAa,CAAI,OAAkB,QAA2B;AACvE,MAAI,OAAO,QAAQ,YAAY,MAAM,UAAU,KAAK,OAAO,QAAQ,UAAU;AACzE,WAAO;AAAA,EACX;AACA,SAAO,OAAO,IAAI,QAAQ,MAAM,KAAK,CAAC;AAC1C;AAEO,MAAM,SAAS,CAAC,QAAwB;AAC3C,SAAO,KAAK,UAAU,KAAK,MAAM,CAAC;AACtC;AAEO,MAAM,mBAAmB,CAAC,UAA6B;AAC1D,MAAI,MAAM,mBAAmB,GAAG;AAC5B,WAAO;AAAA,EACX;AACA,QAAM,MAAM,KAAK,IAAI;AACrB,UAAQ,MAAM,eAAe;AAAA,IACzB,KAAK;AACD,aAAO,MAAM,MAAM,iBAAiB,KAAK,KAAK;AAAA,IAClD,KAAK;AACD,aAAO,MAAM,MAAM,iBAAiB,KAAK,KAAK,KAAK;AAAA,IACvD,KAAK;AACD,aAAO,MAAM,MAAM,iBAAiB,IAAI,KAAK,KAAK,KAAK;AAAA,IAC3D,KAAK;AACD,aAAO,MAAM,MAAM,iBAAiB,KAAK,KAAK,KAAK,KAAK;AAAA;AAAA,IAC5D,KAAK;AACD,aAAO,MAAM,MAAM,iBAAiB,MAAM,KAAK,KAAK,KAAK;AAAA;AAAA,IAC7D;AACI,aAAO;AAAA,EACf;AACJ;",
  "names": []
}
